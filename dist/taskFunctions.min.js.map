{"version":3,"sources":["taskFunctions.js"],"names":["require","config","mongoose","connect","process","env","MONGO_URI","useNewUrlParser","useUnifiedTopology","exports","getTasksInList","req","res","_listId","status","json","tasks","error","err","message","Task","params","listId","then","save","task","updateTask","findOneAndUpdate","_id","taskId","$set","body","new","createTaskInList","deleteTask","newTask","findOneAndRemove","result"],"mappings":"aACAA,QAAQ,UAAUC,SAGlB,IAAMC,SAAWF,QAAQ,oBAARA,QAAQ,0BAAnBE,cAAAA,KAINA,SAASC,QAAQC,QAAQC,IADzBC,UAAA,CAAAC,iBAAA,EAAAC,oBAAA,IAGAC,QAAQC,eAAiB,SAACC,EAAKC,GAF/BV,KAASC,KAAAA,CAATU,QAAyBR,EAAIC,OAAAA,SAAaC,KAAAA,SAAAA,GAAiB,OAAnBK,EAAAE,OAAA,KAAAC,KAAAC,KAAxCd,MAAiEM,SAAAA,GAAAA,OAAoBI,EAAAE,OAAA,KAAAC,KAAA,CAAAE,MAAAC,EAAAC,aAErFV,QAAQC,iBAAiB,SAAAC,EAAAC,GACX,IAAAQ,KAAA,CAAEP,MAASF,EAAIU,KAAOC,MAC3BC,QAAKZ,EAAAK,OAAKM,SADfE,OAEcD,KAAO,SAAAE,GAACX,OAAOF,EAAXE,OAAqB,KAAAC,KAAAU,KAFvC,MAEgDP,SAAAA,GAAIC,OAAAA,EAAAA,OAAAA,KAAAA,KAAAA,CAAAA,MAAAA,EAAAA,aACvDV,QAJDiB,WAAA,SAAAf,EAAAC,GAiBIQ,KAAKO,iBAAiB,CAAEC,IAAKjB,EAAIU,OAAOQ,OAAQhB,QAASF,EAAIU,OAAOC,QAAU,CAAEQ,KAAMnB,EAAIoB,MAAQ,CAAEC,KAAK,IAXrGC,KAAAA,SAAAA,GAAAA,OAAAA,EAARnB,OAA2B,KAACH,KAAKC,KAW7B,MAVW,SAAAM,GAAG,OAAIE,EAAKN,OAAA,KAAAC,KAAA,CAAAE,MAAAC,EAAAC,aAAAV,QAAvByB,WAAA,SAAAvB,EAAAC,GAIAuB,KAAOC,iBACG,CAAAR,IAAAH,EAAIJ,OAAAQ,OAAAhB,QAAAF,EAAAU,OAAAC,SAAAC,KAAO,SAAAc,GAACvB,OAAOF,EAAKG,OAAKU,KAAzBV,KAAA,CAAAI,QAAA,gCADdgB,MAEW,SAAAjB,GAAA,OAAAN,EAAAM,OAAG,KAAAH,KAAA,CAAAE,MAAAC,EAAAC","file":"taskFunctions.min.js","sourcesContent":["// taskFunctions.js\r\nrequire('dotenv').config();\r\n\r\n\r\nconst mongoose = require('./db/db');\r\nconst { Task } = require('./db/models/task.model');\r\n\r\n// Connect to MongoDB\r\nmongoose.connect(process.env.MONGO_URI, { useNewUrlParser: true, useUnifiedTopology: true });\r\n\r\nexports.getTasksInList = (req, res) => {\r\n    Task.find({ _listId: req.params.listId })\r\n        .then(tasks => res.status(200).json(tasks))\r\n        .catch(err => res.status(500).json({ error: err.message }));\r\n};\r\n\r\nexports.createTaskInList = (req, res) => {\r\n    let newTask = new Task({\r\n        title: req.body.title,\r\n        _listId: req.params.listId\r\n    });\r\n    newTask.save()\r\n        .then(task => res.status(201).json(task))\r\n        .catch(err => res.status(500).json({ error: err.message }));\r\n};\r\n\r\nexports.updateTask = (req, res) => {\r\n    Task.findOneAndUpdate({ _id: req.params.taskId, _listId: req.params.listId }, { $set: req.body }, { new: true })\r\n        .then(task => res.status(200).json(task))\r\n        .catch(err => res.status(500).json({ error: err.message }));\r\n};\r\n\r\nexports.deleteTask = (req, res) => {\r\n    Task.findOneAndRemove({ _id: req.params.taskId, _listId: req.params.listId })\r\n        .then(result => res.status(200).json({ message: 'Task deleted successfully' }))\r\n        .catch(err => res.status(500).json({ error: err.message }));\r\n};\r\n"]}