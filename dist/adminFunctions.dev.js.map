{"version":3,"sources":["adminFunctions.js"],"names":["require","config","mongoose","User","connect","process","env","MONGO_URI","useNewUrlParser","useUnifiedTopology","exports","getAllUsers","req","res","find","then","users","status","json","err","error","message","adminChangePassword","findOne","_id","params","userId","user","password","body","save","adminChangeEmail","findOneAndUpdate","email","grantAdminRights","findByIdAndUpdate","isAdmin","adminDeleteUser","findByIdAndRemove"],"mappings":"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","sourcesContent":["// adminFunctions.js\r\nrequire('dotenv').config();\r\n\r\n\r\nconst mongoose = require('./db/db');\r\nconst { User } = require('./db/models/user.model');\r\n\r\n// Connect to MongoDB\r\nmongoose.connect(process.env.MONGO_URI, { useNewUrlParser: true, useUnifiedTopology: true });\r\n\r\nexports.getAllUsers = (req, res) => {\r\n    User.find({})\r\n        .then(users => res.status(200).json(users))\r\n        .catch(err => res.status(500).json({ error: err.message }));\r\n};\r\n\r\nexports.adminChangePassword = (req, res) => {\r\n    User.findOne({ _id: req.params.userId })\r\n        .then(user => {\r\n            user.password = req.body.password;\r\n            return user.save();\r\n        })\r\n        .then(() => res.status(200).json({ message: 'Password changed successfully' }))\r\n        .catch(err => res.status(500).json({ error: err.message }));\r\n};\r\n\r\nexports.adminChangeEmail = (req, res) => {\r\n    User.findOneAndUpdate({ _id: req.params.userId }, { email: req.body.email }, { new: true })\r\n        .then(user => res.status(200).json(user))\r\n        .catch(err => res.status(500).json({ error: err.message }));\r\n};\r\n\r\nexports.grantAdminRights = (req, res) => {\r\n    User.findByIdAndUpdate(req.params.userId, { isAdmin: true }, { new: true })\r\n        .then(user => res.status(200).json(user))\r\n        .catch(err => res.status(500).json({ error: err.message }));\r\n};\r\n\r\nexports.adminDeleteUser = (req, res) => {\r\n    User.findByIdAndRemove(req.params.userId)\r\n        .then(() => res.status(200).json({ message: 'User deleted successfully' }))\r\n        .catch(err => res.status(500).json({ error: err.message }));\r\n};\r\n"],"file":"adminFunctions.dev.js"}