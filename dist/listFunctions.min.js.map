{"version":3,"sources":["listFunctions.js"],"names":["require","config","List","mongoose","connect","env","MONGO_URI","useNewUrlParser","useUnifiedTopology","exports","getAllLists","req","res","find","_userId","user_id","process","json","lists","status","error","err","message","createList","body","title","then","list","updateList","findOneAndUpdate","_id","params","id","$set","new","findOneAndRemove","result"],"mappings":"aACAA,QAAQ,UAAUC,SAAlBD,IAAAA,SAAAA,QAAA,oBAGiBA,QAAQ,0BAAjBE,cAAAA,KAGRC,SAASC,QAHQJ,QAAQK,IAAAC,UAAA,CAAAC,iBAGkC,EAAMC,oBAAoB,IAErFC,QAAQC,YAAc,SAACC,EAAKC,GACxBV,KAAKW,KAAK,CAAEC,QAASH,EAAII,UAHpBX,KAAAA,SAAAA,GAAQY,OAAAA,EAAQX,OAAIC,KAA7BW,KAAwCC,KAGpC,MAHsCX,SAAAA,GAAe,OAAEK,EAAnBO,OAAA,KAAAF,KAAA,CAAAG,MAAAC,EAAAC,aAQxCb,QAAQc,WAAa,SAACZ,EAAKC,GANnBF,IAAcR,KAAA,CACbW,MAAKF,EAAAa,KAAAC,MAAEX,QAAaC,EAAAA,UACNH,OADnBc,KAEW,SAAAC,GAAA,OAAAf,EAAAS,OAAG,KAAAJ,KAAAU,KADC,MACOR,SAAAA,GAAAA,OAAOP,EAAXO,OAAqB,KAAAF,KAAA,CAAAG,MAAAC,EAAAC,aAAzBb,QAFdmB,WAAA,SAAAjB,EAAAC,GADJV,KAAA2B,iBAAA,CAAAC,IAAAnB,EAAAoB,OAAAC,GAAAlB,QAAAH,EAAAI,SAAA,CAAAkB,KAAAtB,EAAAa,MAAA,CAAAU,KAAA,IAkBSR,KAAK,SAAAC,GAAI,OAAIf,EAAIO,OAAO,KAAKF,KAAKU,KAlB3C,MAMQJ,SAAAA,GAAR,OAAqBX,EAAAO,OAACR,KAAKC,KAAQ,CAAAQ,MAAAC,EAAAC,aAG3BR,QAAAA,WAAaC,SAAAA,EAAAA,GAFjBb,KAAAiC,iBAAA,CAAAL,IAAAnB,EAAAoB,OAAAC,GAAAlB,QAAAH,EAAAI,UAIOW,KAAP,SAAAU,GACKV,OAAKd,EAAAO,OAAAQ,KAAIV,KAAA,CAAAK,QAAA,gCALd,MAKsBH,SAAAA,GAAAA,OAAOP,EAAXO,OAAqBQ,KAAzBV,KAAA,CAAAG,MAAAC,EAAAC","file":"listFunctions.min.js","sourcesContent":["// listFunctions.js\r\nrequire('dotenv').config();\r\n\r\nconst mongoose = require('./db/db');\r\nconst { List } = require('./db/models/list.model');\r\n\r\n// Connect to MongoDB\r\nmongoose.connect(process.env.MONGO_URI, { useNewUrlParser: true, useUnifiedTopology: true });\r\n\r\nexports.getAllLists = (req, res) => {\r\n    List.find({ _userId: req.user_id })\r\n        .then(lists => res.status(200).json(lists))\r\n        .catch(err => res.status(500).json({ error: err.message }));\r\n};\r\n\r\nexports.createList = (req, res) => {\r\n    let newList = new List({\r\n        title: req.body.title,\r\n        _userId: req.user_id\r\n    });\r\n    newList.save()\r\n        .then(list => res.status(201).json(list))\r\n        .catch(err => res.status(500).json({ error: err.message }));\r\n};\r\n\r\nexports.updateList = (req, res) => {\r\n    List.findOneAndUpdate({ _id: req.params.id, _userId: req.user_id }, { $set: req.body }, { new: true })\r\n        .then(list => res.status(200).json(list))\r\n        .catch(err => res.status(500).json({ error: err.message }));\r\n};\r\n\r\nexports.deleteList = (req, res) => {\r\n    List.findOneAndRemove({ _id: req.params.id, _userId: req.user_id })\r\n        .then(result => res.status(200).json({ message: 'List deleted successfully' }))\r\n        .catch(err => res.status(500).json({ error: err.message }));\r\n};\r\n"]}