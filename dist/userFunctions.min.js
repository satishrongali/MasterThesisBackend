"use strict";require("dotenv").config();var mongoose=require("./db/db"),_require=require("./db/models/user.model"),User=_require.User,jwt=require("jsonwebtoken");mongoose.connect(process.env.MONGO_URI,{useNewUrlParser:!0,useUnifiedTopology:!0}),exports.registerUser=function(e,s){new User(e.body).save().then(function(e){return s.status(201).json(e)}).catch(function(e){return s.status(500).json({error:e.message})})},exports.loginUser=function(e,s){var r=e.body,n=r.email,t=r.password;User.findByCredentials(n,t).then(function(e){return e.createSession()}).then(function(e){return s.status(200).json(e)}).catch(function(e){return s.status(500).json({error:e.message})})},exports.refreshAccessToken=function(e,s){var r=e.header("x-refresh-token"),n=e.header("_id");User.findByIdAndToken(n,r).then(function(e){return e.generateAccessAuthToken()}).then(function(e){return s.header("x-access-token",e).send({accessToken:e})}).catch(function(e){return s.status(500).json({error:e.message})})},exports.updateUserProfile=function(e,s){User.findByIdAndUpdate(e.user_id,{$set:e.body},{new:!0}).then(function(e){return s.status(200).json(e)}).catch(function(e){return s.status(500).json({error:e.message})})},exports.changeUserPassword=function(s,r){User.findById(s.user_id).then(function(e){return e.password=s.body.password,e.save()}).then(function(){return r.status(200).json({message:"Password updated successfully"})}).catch(function(e){return r.status(500).json({error:e.message})})},exports.deleteUser=function(e,s){User.findByIdAndRemove(e.user_id).then(function(){return s.status(200).json({message:"User deleted successfully"})}).catch(function(e){return s.status(500).json({error:e.message})})};
//# sourceMappingURL=userFunctions.min.js.map
