"use strict";require("dotenv").config();var mongoose=require("./db/db"),_require=require("./db/models/user.model"),User=_require.User;mongoose.connect(process.env.MONGO_URI,{useNewUrlParser:!0,useUnifiedTopology:!0}),exports.getAllUsers=function(e,s){User.find({}).then(function(e){return s.status(200).json(e)}).catch(function(e){return s.status(500).json({error:e.message})})},exports.adminChangePassword=function(s,n){User.findOne({_id:s.params.userId}).then(function(e){return e.password=s.body.password,e.save()}).then(function(){return n.status(200).json({message:"Password changed successfully"})}).catch(function(e){return n.status(500).json({error:e.message})})},exports.adminChangeEmail=function(e,s){User.findOneAndUpdate({_id:e.params.userId},{email:e.body.email},{new:!0}).then(function(e){return s.status(200).json(e)}).catch(function(e){return s.status(500).json({error:e.message})})},exports.grantAdminRights=function(e,s){User.findByIdAndUpdate(e.params.userId,{isAdmin:!0},{new:!0}).then(function(e){return s.status(200).json(e)}).catch(function(e){return s.status(500).json({error:e.message})})},exports.adminDeleteUser=function(e,s){User.findByIdAndRemove(e.params.userId).then(function(){return s.status(200).json({message:"User deleted successfully"})}).catch(function(e){return s.status(500).json({error:e.message})})};
//# sourceMappingURL=adminFunctions.min.js.map
